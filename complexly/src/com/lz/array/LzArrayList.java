package com.lz.array;

/**
 * ArrayList 的扩容方法：
 * @Author LiZhi
 */
public class LzArrayList {

    /**
     * ArrayList 是由数组构成的。
     * ArrayList扩容的核心方法就是调用Arrays.copyOf()方法，创建一个当前容量1.5倍的数组，然后将原数组元素拷贝过去。
     * 增加元素的时候：
     * 首先会调用一个方法来确定集合的大小，如果集合满了，就要进行扩容。
     * 1、通过ArrayList()构造一个空集合，初始长度为0，第一次添加元素，会创建一个长度为10的数组。
     * 2、第二次添加元素，集合不为空，而且集合的真实长度size+1是小于数组长度10的，所以直接添加，不用扩容。
     * 3、第11次添加元素，此时size+1=11是大于数组长度的，需要扩容。这时候创建一个长度为10+10*0.5=15长度的数组。然后将原数组元素拷贝至新数组。
     * 4、Integer.MAX_VALUE-8=2147483639。 这个值%1.5=1431655759
     *    表示1431655759次添加元素的时候，为了防止内存溢出，就不能扩容1.5倍了。
     *    直接创建一个1431655759+1大小的数组。
     * 5、第Integer.MAX_VALUE+1次添加元素时，抛出OutOfMemoryError 异常
     * 注意：可以向集合中添加null。因为new Object[size] 是可以有null值存在的。
     *
     * 删除元素的时候：
     *  1、根据给定所应删除：
     *  先判断索引的范围是否超过
     *  返回索引处的删除元素。
     *  当删除索引不是最后一个元素的时候，将删除索引元素之后的所有元素直接一个整体往前移动一位。
     *  再把最后一个长度的元素置为null,方便垃圾回收。
     * 2、根据元素值删除：
     *   使用if判断，元素值符合的删除了就返回，
     *   所以只会删除第一个符合的元素。
     */

}
