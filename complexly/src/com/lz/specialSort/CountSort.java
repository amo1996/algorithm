package com.lz.specialSort;

/**
 * @Classname CountSort
 * @Description  计数排序(特殊的桶排序)
 * @Date 2019/6/19 20:45
 * @Created by liZhi
 */
public class CountSort {

    /**
      计数排序:  跟桶排序类似，只是桶的大小粒度不一样。
       当要排序的n个数据，所处的范围并不大的时候，比如最大值就是k，我们就可以把数据划分为k个桶。
     每个桶内的数据值都是相同的，直接就省掉了桶内排序的时间。

       如果你所在的省高考有50万考生，如果通过成绩快速排序得出名次呢？
     考生的满分是750分，最小是0分。这个数据范围就很小，所以我们可以分为751个桶，对应分数从0分到750分。
     根据考生的成绩，我们将这50万考生划分到这751个桶内。我们只需要依次扫描每个桶，将桶内的考生依次输出到一个数组中，就实现了50万考生的排序。
     因为只涉及到扫描遍历操作，所以时间复杂度是O(n)。

        计数排序只能用在数据范围不大的场景中，而且，技术排序只能给非负整数排序。如果排序的数据是其他类型的，要将其在不改变相对大小的情况下，转化为非负整数。
     比如： 如果考生成绩需要精确到小数后一位，我们就需要将所有的分数都先乘以10，转化为整数，然后再放在7510个桶内。
     如果排序的数据中有负数，数据的范围是[-1000,1000]，那我们就可以先对每个数据都加1000，转化为非负整数。

    */
}
